{
  "$defs": {
    "Brine": {
      "properties": {
        "salinity": {
          "default": 35000.0,
          "description": "Salinity of brine, with unit ppm (parts per million)",
          "exclusiveMinimum": 0.0,
          "title": "Salinity",
          "type": "number"
        },
        "perc_na": {
          "default": 0.0,
          "description": "Percentage of NaCl in the dissolved salts in brine",
          "maximum": 100.0,
          "minimum": 0.0,
          "title": "Perc Na",
          "type": "number"
        },
        "perc_ca": {
          "default": 100.0,
          "description": "Percentage of CaCl in the dissolved salts in brine",
          "maximum": 100.0,
          "minimum": 0.0,
          "title": "Perc Ca",
          "type": "number"
        },
        "perc_k": {
          "default": 0.0,
          "description": "Percentage of KCl in the dissolved salts in brine",
          "maximum": 100.0,
          "minimum": 0.0,
          "title": "Perc K",
          "type": "number"
        }
      },
      "title": "Brine",
      "type": "object"
    },
    "CO2Models": {
      "enum": [
        "flag",
        "span_wagner"
      ],
      "title": "CO2Models",
      "type": "string"
    },
    "FluidMixModel": {
      "enum": [
        "wood",
        "brie"
      ],
      "title": "FluidMixModel",
      "type": "string"
    },
    "Fluids": {
      "properties": {
        "brine": {
          "$ref": "#/$defs/Brine",
          "description": "Brine model parameters"
        },
        "oil": {
          "$ref": "#/$defs/Oil",
          "description": "Oil model parameters"
        },
        "gas": {
          "$ref": "#/$defs/Gas",
          "description": "Gas model parameters"
        },
        "condensate": {
          "anyOf": [
            {
              "$ref": "#/$defs/Oil"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Condensate is defined by the same set of parameters as oil, optional setting for condensate cases"
        },
        "mix_method": {
          "$ref": "#/$defs/FluidMixModel",
          "description": "Selection between Wood's or Brie model. Wood's model gives more radical response to adding small amounts of gas in brine or oil"
        },
        "brie_exponent": {
          "description": "Brie exponent selects the mixing curve shape, from linear mix to harmonic mean",
          "title": "Brie Exponent",
          "type": "integer"
        },
        "temperature": {
          "description": "In most cases it is sufficient with a constant temperature setting for the reservoir. If temperature is modelled in the simulation model, it is preferred to use that",
          "title": "Temperature",
          "type": "number"
        },
        "salinity_from_sim": {
          "default": false,
          "description": "In most cases it is sufficient with a constant salinity setting for the reservoir, unless there is large contrastbetween formation water and injected water. If salinity is modelled in the simulation model, it is preferred to use that",
          "title": "Salinity From Sim",
          "type": "boolean"
        },
        "temperature_from_sim": {
          "default": false,
          "description": "Flag to use temperature estimate from simulation model",
          "title": "Temperature From Sim",
          "type": "boolean"
        },
        "gas_saturation_is_co2": {
          "default": false,
          "description": "Eclipse model only provides one parameter for gas saturation, this flag sets the gas type to be CO2 instead of hydrocarbon gas",
          "title": "Gas Saturation Is Co2",
          "type": "boolean"
        },
        "calculate_condensate": {
          "default": false,
          "description": "Flag to control if gas should be modelled with condensate model, in which case RV parameter must be present in the Eclipse model",
          "title": "Calculate Condensate",
          "type": "boolean"
        },
        "gas_z_factor": {
          "default": 1.0,
          "description": "Factor for deviation from an ideal gas in terms of volume change as a function of temperature and pressure",
          "title": "Gas Z Factor",
          "type": "number"
        },
        "co2_model": {
          "$ref": "#/$defs/CO2Models",
          "default": "span_wagner",
          "description": "Selection of model for CO2 properties, 'span_wagner' equation of state model or 'flag'. Note that access to flag model depends on licence"
        }
      },
      "required": [
        "brine",
        "oil",
        "gas",
        "mix_method",
        "brie_exponent",
        "temperature"
      ],
      "title": "Fluids",
      "type": "object"
    },
    "FractionFiles": {
      "properties": {
        "rel_path_fractions": {
          "default": "../../sim2seis/input/pem",
          "description": "Directory for volume fractions",
          "format": "directory-path",
          "title": "Rel Path Fractions",
          "type": "string"
        },
        "fractions_grid_file_name": {
          "description": "Grid definition of the volume fractions",
          "format": "file-path",
          "title": "Fractions Grid File Name",
          "type": "string"
        },
        "fractions_prop_file_names": {
          "description": "Volume fractions",
          "items": {
            "format": "path",
            "type": "string"
          },
          "title": "Fractions Prop File Names",
          "type": "array"
        },
        "fraction_is_ntg": {
          "default": true,
          "description": "In case of a single fraction, it can either be a real volume fraction or a net-to-gross parameter. If there is more than one fraction, they have to represent real volume fractions, and this will be ignored",
          "title": "Fraction Is Ntg",
          "type": "boolean"
        }
      },
      "required": [
        "fractions_grid_file_name",
        "fractions_prop_file_names"
      ],
      "title": "FractionFiles",
      "type": "object"
    },
    "FromGlobal": {
      "properties": {
        "grid_model": {
          "title": "Grid Model",
          "type": "string"
        },
        "seis_dates": {
          "items": {
            "type": "string"
          },
          "title": "Seis Dates",
          "type": "array"
        },
        "diff_dates": {
          "items": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": "Diff Dates",
          "type": "array"
        },
        "global_config": {
          "additionalProperties": true,
          "title": "Global Config",
          "type": "object"
        }
      },
      "required": [
        "grid_model",
        "seis_dates",
        "diff_dates",
        "global_config"
      ],
      "title": "FromGlobal",
      "type": "object"
    },
    "Gas": {
      "properties": {
        "gas_gravity": {
          "default": 0.7,
          "description": "Gas gravity is a ratio of gas molecular weight to that air",
          "maximum": 0.87,
          "minimum": 0.55,
          "title": "Gas Gravity",
          "type": "number"
        },
        "model": {
          "default": "HC2016",
          "description": "Gas model is one of 'Global', 'Light', or 'HC2016' (default)",
          "title": "Model",
          "type": "string"
        }
      },
      "title": "Gas",
      "type": "object"
    },
    "KMuRegressionParams": {
      "properties": {
        "rho_weights": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of float values for polynomial regression for density based on porosity",
          "title": "Rho Weights"
        },
        "rho_regression": {
          "default": false,
          "description": "Matrix density is normally estimated from mineral composition and the density of each mineral. Setting this to True will estimate matrix density based on porosity alone",
          "title": "Rho Regression",
          "type": "boolean"
        },
        "k_weights": {
          "default": null,
          "description": "List of float values for polynomial regression for bulk modulus based on porosity",
          "items": {
            "type": "number"
          },
          "title": "K Weights",
          "type": "array"
        },
        "mu_weights": {
          "default": null,
          "description": "List of float values for polynomial regression for shear modulus based on porosity",
          "items": {
            "type": "number"
          },
          "title": "Mu Weights",
          "type": "array"
        },
        "mode": {
          "const": "k_mu",
          "default": "k_mu",
          "description": "Regression mode mode must be set to 'k_mu' for estimation of bulk and shear modulus based on porosity",
          "title": "Mode",
          "type": "string"
        }
      },
      "title": "KMuRegressionParams",
      "type": "object"
    },
    "MineralMixModel": {
      "enum": [
        "voigt-reuss-hill",
        "hashin-shtrikman-average"
      ],
      "title": "MineralMixModel",
      "type": "string"
    },
    "MineralProperties": {
      "properties": {
        "bulk_modulus": {
          "exclusiveMinimum": 1000000000.0,
          "title": "Bulk Modulus",
          "type": "number"
        },
        "shear_modulus": {
          "exclusiveMinimum": 1000000000.0,
          "title": "Shear Modulus",
          "type": "number"
        },
        "density": {
          "exclusiveMinimum": 1000.0,
          "title": "Density",
          "type": "number"
        }
      },
      "required": [
        "bulk_modulus",
        "shear_modulus",
        "density"
      ],
      "title": "MineralProperties",
      "type": "object"
    },
    "NTGFraction": {
      "properties": {
        "from_porosity": {
          "default": false,
          "description": "If True, net-to-gross is estimated from porosity parameter in reservoir simulator INIT file. If False, net-to-gross is read from the NTG parameter in the INIT file.",
          "title": "From Porosity",
          "type": "boolean"
        }
      },
      "title": "NTGFraction",
      "type": "object"
    },
    "Oil": {
      "properties": {
        "gas_gravity": {
          "default": 0.7,
          "description": "Gas gravity is a ratio of gas molecular weight to that air",
          "maximum": 0.87,
          "minimum": 0.55,
          "title": "Gas Gravity",
          "type": "number"
        },
        "reference_density": {
          "default": 865.0,
          "description": "Oil density in kg/m^3 at standard conditions, i.e. 15.6 deg. C and 101 kPa",
          "maximum": 950,
          "minimum": 700,
          "title": "Reference Density",
          "type": "number"
        },
        "gor": {
          "default": 123.0,
          "description": "Gas-oil volume ratio in liter/liter when the oil it brought to the surface at standard conditions",
          "minimum": 0.0,
          "title": "Gor",
          "type": "number"
        }
      },
      "title": "Oil",
      "type": "object"
    },
    "Overburden": {
      "properties": {
        "type": {
          "$ref": "#/$defs/OverburdenPressure",
          "description": "Selection of 'trend' or 'constant' type for overburden pressure"
        },
        "trend": {
          "$ref": "#/$defs/Trend",
          "description": "Setting of intercept and gradient for pressure trend vs. depth"
        },
        "constant": {
          "description": "Constant overburden pressure setting",
          "title": "Constant",
          "type": "number"
        }
      },
      "required": [
        "type",
        "trend",
        "constant"
      ],
      "title": "Overburden",
      "type": "object"
    },
    "OverburdenPressure": {
      "enum": [
        "constant",
        "trend"
      ],
      "title": "OverburdenPressure",
      "type": "string"
    },
    "PatchyCementParams": {
      "properties": {
        "upper_bound_cement_fraction": {
          "default": 0.1,
          "description": "There is an upper limit for the constant cement model, which is part of the Patchy Cement model. Values higher than 0.1 can lead to the model reaching saturation",
          "title": "Upper Bound Cement Fraction",
          "type": "number"
        },
        "cement_fraction": {
          "default": 0.04,
          "description": "Representative cement fraction for Patchy Cement should be chosen so that the model trend line goes through the median of the log values",
          "exclusiveMinimum": 0,
          "maximum": 0.1,
          "title": "Cement Fraction",
          "type": "number"
        },
        "critical_porosity": {
          "default": 0.4,
          "description": "Critical porosity is the porosity of the sands at the time of deposition, before any compaction",
          "maximum": 0.5,
          "minimum": 0.3,
          "title": "Critical Porosity",
          "type": "number"
        },
        "shear_reduction": {
          "default": 0.5,
          "description": "Shear reduction is related to the fraction of tangential friction between grains. Shear reduction of 1 means frictionless contact, and 0 means full friction",
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "Shear Reduction",
          "type": "number"
        },
        "coord_num_function": {
          "default": "PorBased",
          "description": "Coordinate number is the number of grain-grain contacts. It is normally assumed to be a function of porosity for friable sand",
          "enum": [
            "ConstVal",
            "PorBased"
          ],
          "title": "Coord Num Function",
          "type": "string"
        },
        "coordination_number": {
          "default": 9.0,
          "description": "In case of a constant value for the number of grain contacts, a value of 8-9 is common",
          "title": "Coordination Number",
          "type": "number"
        }
      },
      "title": "PatchyCementParams",
      "type": "object"
    },
    "PatchyCementRPM": {
      "properties": {
        "model": {
          "const": "patchy_cement",
          "title": "Model",
          "type": "string"
        },
        "parameters": {
          "$ref": "#/$defs/PatchyCementParams"
        }
      },
      "required": [
        "model",
        "parameters"
      ],
      "title": "PatchyCementRPM",
      "type": "object"
    },
    "Pressure": {
      "properties": {
        "overburden": {
          "$ref": "#/$defs/Overburden"
        }
      },
      "required": [
        "overburden"
      ],
      "title": "Pressure",
      "type": "object"
    },
    "RegressionModels": {
      "properties": {
        "sandstone": {
          "anyOf": [
            {
              "$ref": "#/$defs/VpVsRegressionParams"
            },
            {
              "$ref": "#/$defs/KMuRegressionParams"
            }
          ],
          "description": "Selection of model type for sandstone regression model",
          "title": "Sandstone"
        },
        "shale": {
          "anyOf": [
            {
              "$ref": "#/$defs/VpVsRegressionParams"
            },
            {
              "$ref": "#/$defs/KMuRegressionParams"
            }
          ],
          "description": "Selection of model type for shale regression model",
          "title": "Shale"
        }
      },
      "required": [
        "sandstone",
        "shale"
      ],
      "title": "RegressionModels",
      "type": "object"
    },
    "RegressionRPM": {
      "properties": {
        "model": {
          "const": "regression",
          "title": "Model",
          "type": "string"
        },
        "parameters": {
          "$ref": "#/$defs/RegressionModels"
        }
      },
      "required": [
        "model",
        "parameters"
      ],
      "title": "RegressionRPM",
      "type": "object"
    },
    "Results": {
      "properties": {
        "save_results_to_rms": {
          "default": false,
          "description": "When the PEM is run from RMS, the results can be saved directly to the RMS project",
          "title": "Save Results To Rms",
          "type": "boolean"
        },
        "save_results_to_disk": {
          "default": true,
          "description": "Results must be saved to disk for use in sim2seis setting etc",
          "title": "Save Results To Disk",
          "type": "boolean"
        },
        "save_intermediate_results": {
          "default": false,
          "description": "Intermediate results can be saved to a separate directory for QC. Intermediate results include effective mineral and fluid properties",
          "title": "Save Intermediate Results",
          "type": "boolean"
        }
      },
      "title": "Results",
      "type": "object"
    },
    "RockMatrixProperties": {
      "description": "Configuration for rock matrix properties.\n\nContains parameters necessary for defining matrix properties for\ndifferent rock types, including sandstones, carbonates,\nand other lithologies.",
      "properties": {
        "rpm": {
          "anyOf": [
            {
              "$ref": "#/$defs/PatchyCementRPM"
            },
            {
              "$ref": "#/$defs/TMatrixRPM"
            },
            {
              "$ref": "#/$defs/RegressionRPM"
            }
          ],
          "description": "Selection of parameter set for rock physics model",
          "title": "Rpm"
        },
        "minerals": {
          "additionalProperties": {
            "$ref": "#/$defs/MineralProperties"
          },
          "default": {
            "shale": {
              "bulk_modulus": 25000000000.0,
              "density": 2680.0,
              "shear_modulus": 12000000000.0
            },
            "quartz": {
              "bulk_modulus": 36800000000.0,
              "density": 2650.0,
              "shear_modulus": 44000000000.0
            },
            "calcite": {
              "bulk_modulus": 76800000000.0,
              "density": 2710.0,
              "shear_modulus": 32000000000.0
            },
            "dolomite": {
              "bulk_modulus": 94900000000.0,
              "density": 2870.0,
              "shear_modulus": 45000000000.0
            },
            "stevensite": {
              "bulk_modulus": 32500000000.0,
              "density": 2490.0,
              "shear_modulus": 45000000000.0
            }
          },
          "description": "Standard values are set for shale, quartz, calcite, dolomite and stevensite. All settings can be changed by re-defining them in the parameter file",
          "title": "Minerals",
          "type": "object"
        },
        "volume_fractions": {
          "anyOf": [
            {
              "$ref": "#/$defs/NTGFraction"
            },
            {
              "$ref": "#/$defs/FractionFiles"
            }
          ],
          "description": "Choice of volume fractions based on NTG from simulator INIT file or from grid property file ",
          "title": "Volume Fractions"
        },
        "fraction_names": {
          "description": "Fraction names must match the names in the volume fractions file",
          "items": {
            "type": "string"
          },
          "title": "Fraction Names",
          "type": "array"
        },
        "fraction_minerals": {
          "description": "The list of minerals matching the fractions' definition. Each mineral must be defined in the mineral properties dictionary",
          "items": {
            "type": "string"
          },
          "title": "Fraction Minerals",
          "type": "array"
        },
        "shale_fractions": {
          "description": "List the fractions that should be regarded as non-net reservoir",
          "items": {
            "type": "string"
          },
          "title": "Shale Fractions",
          "type": "array"
        },
        "complement": {
          "description": "For grid cells where the sum of the fractions does not add up to 1.0, the remainder is filled with the complement mineral, e.g. when using net-to-gross instead of volume fractions",
          "title": "Complement",
          "type": "string"
        },
        "pressure_sensitivity": {
          "default": true,
          "description": "For the RPM models where pressure sensitivity is not part of the model, as for friable and patchy cement models, a separate pressure sensitivity model, based on plug measurements is added",
          "title": "Pressure Sensitivity",
          "type": "boolean"
        },
        "cement": {
          "default": "quartz",
          "description": "For the patchy cement model, the cement mineral must be defined, and its properties must be defined in the mineral properties' dictionary",
          "title": "Cement",
          "type": "string"
        },
        "mineral_mix_model": {
          "$ref": "#/$defs/MineralMixModel",
          "default": "voigt-reuss-hill",
          "description": "Effective medium model selection: either 'hashin-shtrikman-average' or 'voigt-reuss-hill'"
        }
      },
      "required": [
        "rpm",
        "fraction_names",
        "fraction_minerals",
        "shale_fractions",
        "complement"
      ],
      "title": "RockMatrixProperties",
      "type": "object"
    },
    "TMatrixParams": {
      "properties": {
        "t_mat_model_version": {
          "description": "When T Matrix model is calibrated and optimised based on well data, a selection is made on how much information will be available when the calibrated model is applied to a PEM model",
          "enum": [
            "PETEC",
            "EXP"
          ],
          "title": "T Mat Model Version",
          "type": "string"
        },
        "angle": {
          "default": 90.0,
          "description": "Angle between axis of symmetry and horizontal plane. A standard VTI medium will have 90 deg angle",
          "exclusiveMaximum": 180.0,
          "minimum": 0.0,
          "title": "Angle",
          "type": "number"
        },
        "freq": {
          "default": 100.0,
          "description": "Frequency of the acoustic signal in Hz. For seismic, a standard value of 100 is used. Sonic log or ultrasonic measurements will require a higher value",
          "exclusiveMinimum": 0.0,
          "title": "Freq",
          "type": "number"
        },
        "perm": {
          "default": 100.0,
          "description": "Permeability of the rock matrix in mD. A standard value of 100 mD is commonly used",
          "exclusiveMinimum": 0.0,
          "title": "Perm",
          "type": "number"
        },
        "visco": {
          "default": 10.0,
          "description": "Fluid viscosity in cP",
          "exclusiveMinimum": 0.0,
          "title": "Visco",
          "type": "number"
        },
        "tau": {
          "default": 1e-07,
          "description": "A time factor for reaching equilibrium in fluid movement. Best left alone",
          "title": "Tau",
          "type": "number"
        }
      },
      "required": [
        "t_mat_model_version"
      ],
      "title": "TMatrixParams",
      "type": "object"
    },
    "TMatrixRPM": {
      "properties": {
        "model": {
          "const": "t_matrix",
          "title": "Model",
          "type": "string"
        },
        "parameters": {
          "$ref": "#/$defs/TMatrixParams"
        }
      },
      "required": [
        "model",
        "parameters"
      ],
      "title": "TMatrixRPM",
      "type": "object"
    },
    "Trend": {
      "properties": {
        "intercept": {
          "description": "Intercept in pressure depth trend",
          "title": "Intercept",
          "type": "number"
        },
        "gradient": {
          "description": "Gradient in pressure depth trend",
          "title": "Gradient",
          "type": "number"
        }
      },
      "required": [
        "intercept",
        "gradient"
      ],
      "title": "Trend",
      "type": "object"
    },
    "VpVsRegressionParams": {
      "properties": {
        "rho_weights": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of float values for polynomial regression for density based on porosity",
          "title": "Rho Weights"
        },
        "rho_regression": {
          "default": false,
          "description": "Matrix density is normally estimated from mineral composition and the density of each mineral. Setting this to True will estimate matrix density based on porosity alone",
          "title": "Rho Regression",
          "type": "boolean"
        },
        "vp_weights": {
          "default": null,
          "description": "List of float values for polynomial regression for Vp based on porosity",
          "items": {
            "type": "number"
          },
          "title": "Vp Weights",
          "type": "array"
        },
        "vs_weights": {
          "default": null,
          "description": "List of float values for polynomial regression for Vs based on porosity",
          "items": {
            "type": "number"
          },
          "title": "Vs Weights",
          "type": "array"
        },
        "mode": {
          "const": "vp_vs",
          "default": "vp_vs",
          "description": "Regression mode mode must be set to 'vp_vs' for estimation of Vp and Vs based on porosity",
          "title": "Mode",
          "type": "string"
        }
      },
      "title": "VpVsRegressionParams",
      "type": "object"
    }
  },
  "properties": {
    "rock_matrix": {
      "$ref": "#/$defs/RockMatrixProperties",
      "description": "Settings related to effective mineral properties and rock physics model"
    },
    "fluids": {
      "$ref": "#/$defs/Fluids",
      "description": "Settings related to fluid composition"
    },
    "pressure": {
      "$ref": "#/$defs/Pressure",
      "description": "Definition of overburden pressure model - constant or trend"
    },
    "results": {
      "$ref": "#/$defs/Results",
      "description": "Flags for saving results of the PEM"
    },
    "diff_calculation": {
      "additionalProperties": {
        "items": {
          "enum": [
            "ratio",
            "diff",
            "diffpercent"
          ],
          "type": "string"
        },
        "type": "array"
      },
      "description": "Difference properties of the PEM can be calculated for the dates in the Eclipse UNRST file. The settings decide which parameters difference properties will be generated for, and what kind of difference calculation is run - normal difference, percent difference or ratio",
      "title": "Diff Calculation",
      "type": "object"
    },
    "global_params": {
      "anyOf": [
        {
          "$ref": "#/$defs/FromGlobal"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    }
  },
  "required": [
    "rock_matrix",
    "fluids",
    "pressure",
    "results",
    "diff_calculation"
  ],
  "title": "PemConfig",
  "type": "object"
}